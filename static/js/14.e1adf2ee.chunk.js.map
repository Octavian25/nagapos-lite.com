{"version":3,"sources":["pages/Pembelian/LihatPembelian.jsx/HeadBatalBeli.jsx","pages/Pembelian/LihatPembelian.jsx/HeadPembelian.jsx","pages/Pembelian/LihatPembelian.jsx/FormLihatPembelian.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx","Validasi/Services/ValidasiServicesSelesai.jsx"],"names":["HeadBatalBeli","props","_this","Object","classCallCheck","this","_super","call","state","date","Date","columns","dataField","text","footer","formatter","cell","react_default","a","createElement","parseFloat","toFixed","columnData","reduce","acc","item","parseInt","toLocaleString","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","Field","id","name","component","HiidenFiled","type","readOnly","ReanderField","label","placeholder","tabel","keyField","exportCsv","data","detail_barang","pagination","empty","textEmpty","onClick","back","tabIndex","disabled","isLoadingBatalBeli","Fragment","Component","reduxForm","form","enableReinitialize","validate","ValidasiServicesSelesai","connect","pembelian","showModalBatalBeli","initialValues","no_faktur_group","nama_customer","no_hp","alamat_customer","HeadPembelian","isLoading","isLoadingBatal","FormModal","setStartDate","bind","assertThisInitialized","setLastDate","setState","tgl_awal","tgl_akhir","_this2","InputDate","selected","onChange","onFocus","setTimeout","HideKeyboard","postMessage","ValidasiDataUsers","getTglSystem","FormLihatPembelian","isLoadingServicesSelesai","dataservices","pembayaran","footerAttrs","colSpan","csvExport","headerClasses","rowcontent","row","index","data-tooltip","ReprintPembelian","hasil","postData","then","res","feedback","notabeli","forEach","jml_alamat","head","n_alamat_customer","length","concat","tgl_system","split","total","harga_nota","detail","harga","no_faktur_beli","kode_dept","nama_barang","berat","document","getElementById","value","Print","ToastNotification","catch","err","message","_id","kode_sales","kode_gudang","dispatch","console","log","_this3","data_post","formatDate","moment","format","localStorageencryp","JSON","stringify","datapembelian","_this4","tgl_laporan","localStoragedecryp","parse","context","handleSetPageSidebar","handleSetPageHeader","_this5","react_router_dom","to","data-tut","aria-hidden","panel","style","display","rows","cols","LihatPembelian_jsx_HeadBatalBeli","batalPembelian","LihatPembelian_jsx_HeadPembelian","React","contextType","PageSettings","errors","user_id","user_name","level","tgl_selesai","tgl_ambil"],"mappings":"kQAQMA,oDACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,KAAM,IAAIC,KAAK,SACfC,QAAS,CACP,CACEC,UAAW,cACXC,KAAM,cACNC,OAAQ,IAEV,CACEF,UAAW,QACXC,KAAM,QACNE,UAAW,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,YAAOC,WAAWJ,GAAMK,QAAQ,KAEzCP,OAAQ,SAACQ,GAAD,OACNF,WAAWE,EAAWC,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAM,IAAIJ,QAC1D,KAGN,CACET,UAAW,aACXC,KAAM,aACNE,UAAW,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,YAAOC,WAAWJ,GAAMK,QAAQ,KAEzCP,OAAQ,SAACQ,GAAD,OACNF,WAAWE,EAAWC,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAM,IAAIJ,QAC1D,KAGN,CACET,UAAW,aACXC,KAAM,aACNE,UAAW,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,YAAOO,SAASV,GAAMW,eAAe,WAE9Cb,OAAQ,SAACQ,GAAD,OACNI,SACEJ,EAAWC,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAM,IAC7CE,eAAe,WAErB,CACEf,UAAW,QACXC,KAAM,QACNE,UAAW,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,YAAOO,SAASV,GAAMW,eAAe,WAE9Cb,OAAQ,SAACQ,GAAD,OACNI,SACEJ,EAAWC,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAM,IAC7CE,eAAe,WAErB,CACEf,UAAW,aACXC,KAAM,aACNE,UAAW,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,YAAOO,SAASV,GAAMW,eAAe,WAE9Cb,OAAQ,SAACQ,GAAD,OACNI,SACEJ,EAAWC,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAM,IAC7CE,eAAe,WAErB,CACEf,UAAW,UACXC,KAAM,UACNC,OAAQ,MApEGZ,uDA2EjB,OACEe,EAAAC,EAAAC,cAAA,QACES,SAAUvB,KAAKJ,MAAM4B,aACrBC,WAAY,SAACC,GACD,UAAVA,EAAEC,KAAmBD,EAAEE,kBAEzBC,aAAa,OAEbjB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACblB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,GAAG,kBACHC,KAAK,kBACLC,UAAWC,IACXC,KAAK,SACLC,UAAU,IAEZzB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEE,KAAK,gBACLC,UAAWI,IACXF,KAAK,OACLC,UAAU,EACVE,MAAM,gBACNC,YAAY,2BAGhB5B,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACblB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEE,KAAK,QACLC,UAAWI,IACXF,KAAK,OACLC,UAAU,EACVE,MAAM,QACNC,YAAY,mBAGhB5B,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACblB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEE,KAAK,kBACLC,UAAWI,IACXF,KAAK,OACLC,UAAU,EACVE,MAAM,kBACNC,YAAY,6BAGhB5B,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,UACblB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,SAAS,cACTC,WAAW,EACXC,KAAM5C,KAAKJ,MAAMiD,cACjBvC,QAASN,KAAKG,MAAMG,QACpBwC,WAAW,MACXC,OAAO,EACPC,UAAU,wBAGdpC,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACblB,EAAAC,EAAAC,cAAA,UACEsB,KAAK,SACLa,QAASjD,KAAKJ,MAAMsD,KACpBpB,UAAU,6BAEVlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,qBALf,aAQFlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACflB,EAAAC,EAAAC,cAAA,UACAqC,SAAS,IACLrB,UAAU,4BACVsB,SAAUpD,KAAKJ,MAAMyD,mBACrBjB,KAAK,UAEJpC,KAAKJ,MAAMyD,mBACVzC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACE1C,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,2BADf,yBAKA,qBAKRlB,EAAAC,EAAAC,cAAA,mBAhKoByC,aA6K5B5D,EAAgB6D,YAAU,CACxBC,KAAM,gBACNC,oBAAoB,EACpBC,SAAUC,KAHIJ,CAIb7D,GAGYkE,kBAAQ,SAAC1D,GACtB,MAAO,CACL0C,cAAe1C,EAAM2D,UAAUC,mBAAmBlB,cAClDmB,cAAe,CACbC,gBAAiB9D,EAAM2D,UAAUC,mBAAmBE,gBACpDC,cAAe/D,EAAM2D,UAAUC,mBAAmBG,cAClDC,MAAOhE,EAAM2D,UAAUC,mBAAmBI,MAC1CC,gBAAiBjE,EAAM2D,UAAUC,mBAAmBK,mBAP3CP,CAUZlE,YC7LG0E,oDACJ,SAAAA,EAAYzE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,IACjBxE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXmE,WAAW,EACXC,gBAAgB,EAChBC,UAAW,IAEb3E,EAAK4E,aAAe5E,EAAK4E,aAAaC,KAAlB5E,OAAA6E,EAAA,EAAA7E,CAAAD,IACpBA,EAAK+E,YAAc/E,EAAK+E,YAAYF,KAAjB5E,OAAA6E,EAAA,EAAA7E,CAAAD,IARFA,wGAWNO,GACXJ,KAAK6E,SAAS,CACZC,SAAU,IAAIzE,KAAKD,yCAGXA,GACVJ,KAAK6E,SAAS,CACZE,UAAW,IAAI1E,KAAKD,sCAGf,IAAA4E,EAAAhF,KACP,OACEY,EAAAC,EAAAC,cAAA,QACES,SAAUvB,KAAKJ,MAAM4B,aACrBC,WAAY,SAACC,GACD,UAAVA,EAAEC,KAAmBD,EAAEE,kBAEzBC,aAAa,OAEbjB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACflB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,YACXlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEE,KAAK,WACLC,UAAW+C,IACX1C,MAAM,eACNH,KAAK,OACL8C,SAAUlF,KAAKG,MAAM2E,SACrBK,SAAU,SAAC/E,GAAD,OAAU4E,EAAKP,aAAarE,IACtCoC,YAAY,uBAAsB4C,QAAS,kBAAMC,WAAW,WAC1DC,aAAaC,YAAY,KACxB,SAIP3E,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,YACblB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEE,KAAK,YACLC,UAAW+C,IACX7C,KAAK,OACL8C,SAAUlF,KAAKG,MAAM4E,UACrBI,SAAU,SAAC/E,GAAD,OAAU4E,EAAKJ,YAAYxE,IACrCmC,MAAM,gBACNC,YAAY,wBACZ4C,QAAS,kBAAMC,WAAW,WACxBC,aAAaC,YAAY,KACxB,SAGP3E,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACblB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACEgB,UAAU,4BACVsB,SAAUpD,KAAKJ,MAAM0E,UACrBlC,KAAK,UAEJpC,KAAKJ,MAAM0E,UACV1D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACE1C,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,2BADf,wBAKA,4BAzEYyB,aAyF5Bc,EAAgBb,YAAU,CACxBC,KAAM,gBACNC,oBAAoB,EACpBC,SAAU6B,KAHIhC,CAIba,GAGYR,kBAAQ,SAAC1D,GACtB,MAAO,CACL6D,cAAe,CACbc,SAAWW,cACXV,UAAYU,iBAJH5B,CAOZQ,oBC3FGqB,oDAEJ,SAAAA,EAAY9F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0F,IACjB7F,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXwF,0BAA0B,EAC1BtC,oBAAoB,EACpBiB,WAAW,EACXsB,aAAc,GACdpB,WAAW,EACXqB,YAAY,EACZvF,QAAS,CACP,CACEC,UAAW,iBACXC,KAAM,QACNsF,YAAa,CACXC,QAAS,KAEXtF,OAAQ,SAEV,CACEF,UAAW,gBACXC,KAAM,iBAMR,CACED,UAAW,QACXC,KAAM,SAER,CACED,UAAW,QACXC,KAAM,QACNE,UAAW,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,YAAOO,SAASV,GAAMW,eAAe,WAE9Cb,OAAQ,SAACQ,GAAD,OACNI,SACEJ,EAAWC,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAM,IAC7CE,eAAe,WAErB,CACEf,UAAW,aACXC,KAAM,aACNE,UAAW,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,YAAOO,SAASV,GAAMW,eAAe,WAE9Cb,OAAQ,SAACQ,GAAD,OACNI,SACEJ,EAAWC,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAM,IAC7CE,eAAe,WAErB,CACEf,UAAW,aACXC,KAAM,aACNE,UAAW,SAACC,GACV,OAAOC,EAAAC,EAAAC,cAAA,YAAOO,SAASV,GAAMW,eAAe,WAE9Cb,OAAQ,SAACQ,GAAD,OACNI,SACEJ,EAAWC,OAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAAM,IAC7CE,eAAe,WAErB,CACEf,UAAW,UACXC,KAAM,UACNC,OAAQ,IAEV,CACEF,UAAW,QACXC,KAAM,SACNwF,WAAW,EACXC,cAAe,cACfvF,UAAW,SAACwF,EAAYC,EAAKC,GAC3B,OACExF,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,UAAf,OAUElB,EAAAC,EAAAC,cAAA,UACEuF,eAAa,oBACbjE,KAAK,SACLa,QAAS,kBAAMpD,EAAKyG,iBAAiBH,IACrCrE,UAAU,wBAEVlB,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,oBAMvBrB,OAAQ,MAIdZ,EAAK2B,aAAe3B,EAAK2B,aAAakD,KAAlB5E,OAAA6E,EAAA,EAAA7E,CAAAD,IAtGHA,+DAwGFmC,GACf,IAAIuE,EAAQ,CACVtC,gBAAiBjC,EAAGiC,iBAEtBuC,YAAS,uBAAwBD,GAC9BE,KAAK,SAACC,GACL,IAAIC,EAAW,GACfD,EAAI9D,KAAKgE,SAASC,QAAQ,SAACV,EAAKC,GAC9B,IAAIU,EAAaX,EAAIY,KAAKC,kBAAkBC,OAC5CN,EAAQ,sEAAAO,OACSf,EAAIY,KAAKI,WADlB,+BAAAD,OAESf,EAAIY,KAAK7C,cAFlB,+BAAAgD,OAGSf,EAAIY,KAAK5C,MAHlB,+BAAA+C,OAISf,EAAIY,KAAKC,kBAAkBI,MAAM,EAAG,IAJ7C,YAMJN,EAAa,KACfH,GAAQ,sBAAAO,OAA0Bf,EAAIY,KAAKC,kBAAkBI,MAC3D,EACA,IAFM,aAMNN,EAAa,KACfH,GAAQ,sBAAAO,OAA0Bf,EAAIY,KAAKC,kBAAkBI,MAC3D,GACA,IAFM,aAMVT,GAAQ,6CACRA,GAAQ,eACRA,GAAQ,6CACR,IAAIU,EAAQ,EACRC,EAAa,EACjBnB,EAAIoB,OAAOV,QAAQ,SAACU,EAAQnB,GAC1BiB,GAAgBE,EAAOC,MACvBF,GAA0BC,EAAOD,WACjCX,GAAQ,oBAAAO,OAAwBK,EAAOE,eAA/B,MACRd,GAAQ,oBAAAO,OAAwBK,EAAOG,UAA/B,MACRf,GAAQ,oBAAAO,OAAwBK,EAAOI,YAA/B,MACRhB,GAAQ,oBAAAO,OAAwBK,EAAOK,MAAM5G,QAAQ,GAA7C,MACR2F,GAAQ,oBAAAO,OAAwBK,EAAOC,MAAMlG,eAC3C,SADM,MAGRqF,GAAQ,+CAEVA,GAAQ,oBAAAO,OAAwBG,EAAM/F,eAAe,SAA7C,MACRqF,GAAQ,6CACRA,GAAQ,wBAAAO,OAA4BG,EAAM/F,eAAe,SAAjD,MACRqF,GAAQ,wBAAAO,OAA4BI,EAAWhG,eAC7C,SADM,MAGRqF,GAAQ,yBAUVkB,SAASC,eAAe,WAAWC,MAAQpB,EAC3CqB,MAAMzC,YAAYoB,GAClBsB,YAAkB,UAAW,0BAE9BC,MAAM,SAACC,gDAEMhC,GAAK,IAAAnB,EAAAhF,KAEjB4C,EAAO,CACTqB,gBAAiBkC,EAAIlC,iBAGvBuC,YAAS,+BAAgC5D,GACtC6D,KAAK,SAACC,GAEmB,IAApBA,EAAI9D,KAAKqE,QACXgB,YAAkB,OAAQvB,EAAI9D,KAAKwF,SACnCpD,EAAKH,SAAS,CACZL,WAAW,MAGbQ,EAAKH,SAAS,CACZL,WAAW,IAEbkC,EAAI9D,KAAKiE,QAAQ,SAACV,EAAKC,GACrB,IAAIG,EAAQ,CACVtC,gBAAiBkC,EAAIkC,IAAIpE,gBACzBkD,WAAYhB,EAAIkC,IAAIlB,WACpBmB,WAAYnC,EAAIkC,IAAIC,WACpBpE,cAAeiC,EAAIkC,IAAInE,cACvBC,MAAOgC,EAAIkC,IAAIlE,MACfC,gBAAiB+B,EAAIkC,IAAIjE,gBACzBmE,YAAapC,EAAIkC,IAAIE,YACrB1F,cAAesD,EAAItD,eAErBmC,EAAKpF,MAAM4I,SAASzE,YAAmBwC,SAI5C2B,MAAM,SAACC,GACNM,QAAQC,IAAIP,GACZF,YAAkB,OAAQ,uCAC1BjD,EAAKH,SAAS,CACZL,WAAW,2CAKN5B,GAAM,IAAA+F,EAAA3I,KACb4I,EAAY,CACd9D,SAAU+D,YACRC,EAAO,IAAIzI,KAAKuC,EAAKkC,WAAWiE,OAAO,eAEzChE,UAAW8D,YACTC,EAAO,IAAIzI,KAAKuC,EAAKmC,YAAYgE,OAAO,gBAG5CC,YAAmB,cAAeC,KAAKC,UAAUN,IACjD5I,KAAK6E,SAAS,CACZP,WAAW,IAEbkC,YAAS,2BAA4BoC,GAClCnC,KAAK,SAACC,GAEmB,IAApBA,EAAI9D,KAAKqE,QACXgB,YAAkB,OAAQ,4BAC1BU,EAAK9D,SAAS,CACZP,WAAW,EACX6E,cAAe,OAGjBlB,YAAkB,UAAW,2BAC7BU,EAAK9D,SAAS,CACZP,WAAW,EACX6E,cAAezC,EAAI9D,UAIxBsF,MAAM,SAACC,GAENF,YAAkB,OAAQ,4BAC1BU,EAAK9D,SAAS,CACZP,WAAW,EACX6E,cAAe,8CAIRvG,GAAM,IAAAwG,EAAApJ,KAEnBA,KAAK6E,SAAS,CACZxB,oBAAoB,IAEtBgC,WAAW,WACT,IAAIkB,EAAQ,CACVtC,gBAAiBrB,EAAKqB,iBAExBuC,YAAS,wBAAyBD,GAC/BE,KAAK,SAACC,GACLuB,YAAkB,UAAWvB,EAAI9D,KAAKwF,SACtCgB,EAAKvE,SAAS,CACZL,WAAW,EACXnB,oBAAoB,IAEtB,IAAIgG,EAC2C,IAA7CC,YAAmB,eAAerC,OAC9B,GACAgC,KAAKM,MAAMD,YAAmB,gBACpC9C,YAAS,2BAA4B6C,GAAa5C,KAAK,SAACC,GACtD0C,EAAKvE,SAAS,CACZsE,cAAezC,EAAI9D,WAIxBsF,MAAM,SAACC,GACNF,YAAkB,OAAQ,4BAC1BmB,EAAKvE,SAAS,CACZL,WAAW,EACXF,WAAW,EACXjB,oBAAoB,OAGzB,oCAGHrD,KAAK6E,SAAS,CAAEL,WAAW,gDAG3BxE,KAAKwJ,QAAQC,sBAAqB,GAClCzJ,KAAKwJ,QAAQE,qBAAoB,oCAG1B,IAAAC,EAAA3J,KAEP,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAMC,GAAyB,mBAC7BjJ,EAAAC,EAAAC,cAAA,UACEsB,KAAK,SACLN,UAAU,oBACVgI,WAAS,cAETlJ,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,wBAAwBiI,cAAY,SALnD,UAQFnJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,KACEpJ,EAAAC,EAAAC,cAAA,YACEmJ,MAAO,CAAEC,QAAS,QAClBlI,GAAG,UACHmI,KAAK,MACLC,KAAK,QAGPxJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,KACG,KACyB,IAAzBhK,KAAKG,MAAMqE,UACR,kBACA,mBAEN5D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cACa,IAAzB9B,KAAKG,MAAMqE,UACV5D,EAAAC,EAAAC,cAACuJ,EAAD,CACEnH,KAAM,kBAAMyG,EAAKzG,QACjBG,mBAAoBrD,KAAKG,MAAMkD,mBAC/B9B,SAAU,SAACqB,GAAD,OAAU+G,EAAKW,eAAe1H,MAG1ChC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KAEE1C,EAAAC,EAAAC,cAACyJ,EAAD,CACEhJ,SAAU,SAACqB,GAAD,OAAU+G,EAAKnI,aAAaoB,IACtC0B,UAAWtE,KAAKG,MAAMmE,YAExB1D,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,SAAS,kBACTC,WAAW,EACXC,KAAM5C,KAAKG,MAAMgJ,cACjB7I,QAASN,KAAKG,MAAMG,QACpByC,OAAO,EACPC,UAAU,yBAKlBpC,EAAAC,EAAAC,cAAA,oBAlWuB0J,IAAMjH,WAAjCmC,EACG+E,YAAcC,IA+WR7G,sBAAQ,KAARA,CAAc6B,qCC/WdF,IAtBW,SAACuC,GACvB,IAAM4C,EAAS,GAkBf,OAjBK5C,EAAM6C,UACPD,EAAOC,QAAU,8BAEhB7C,EAAM8C,YACPF,EAAOE,UAAY,+BAGlB9C,EAAM+C,QACPH,EAAOG,MAAQ,wBASZH,qCCPI/G,IAZiB,SAACmE,GAC7B,IAAM4C,EAAS,GAQf,OAPK5C,EAAMgD,cACPJ,EAAOI,YAAc,sCAEpBhD,EAAMiD,YACPL,EAAOK,UAAY,8BAGhBL","file":"static/js/14.e1adf2ee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport ValidasiServicesSelesai from \"../../../Validasi/Services/ValidasiServicesSelesai\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadBatalBeli extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(\"Y-m-d\"),\r\n      columns: [\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\r\n              1\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"berat_nota\",\r\n          text: \"Berat Nota\",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\r\n              1\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"harga_nota\",\r\n          text: \"Harga Nota\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"harga\",\r\n          text: \"Harga\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"harga_rata\",\r\n          text: \"Harga Rata\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"kondisi\",\r\n          text: \"Kondisi\",\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"no_faktur_group\"\r\n              name=\"no_faktur_group\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={true}\r\n            />\r\n            <Field\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"No Hp\"\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              label=\"Alamat Customer\"\r\n              placeholder=\"Masukan Alamat Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"nama_barang\"\r\n              exportCsv={false}\r\n              data={this.props.detail_barang}\r\n              columns={this.state.columns}\r\n              pagination=\"off\"\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.props.back}\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              <i className=\"fa fa-arrow-left\"></i> Kembali\r\n            </button>\r\n          </div>\r\n          <div className=\"col-9\">\r\n          <button\r\n          tabIndex=\"2\"\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoadingBatalBeli}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoadingBatalBeli ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Membatal\r\n                </>\r\n              ) : (\r\n                \"Batal Pembelian\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {/* {this.props.isLoadingBatalBeli ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n        {/* <ModalGlobal title=\"Pembayaran\" content={<ModalPembayaran />} /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadBatalBeli = reduxForm({\r\n  form: \"HeadBatalBeli\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiServicesSelesai,\r\n})(HeadBatalBeli);\r\n// export default connect(maptostate, null)(HeadBatalBeli);\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    detail_barang: state.pembelian.showModalBatalBeli.detail_barang,\r\n    initialValues: {\r\n      no_faktur_group: state.pembelian.showModalBatalBeli.no_faktur_group,\r\n      nama_customer: state.pembelian.showModalBatalBeli.nama_customer,\r\n      no_hp: state.pembelian.showModalBatalBeli.no_hp,\r\n      alamat_customer: state.pembelian.showModalBatalBeli.alamat_customer,\r\n    },\r\n  };\r\n})(HeadBatalBeli);\r\n","/* eslint-disable no-undef */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../components/helpers/function\";\r\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadPembelian extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isLoadingBatal: false,\r\n      FormModal: \"\",\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n  componentDidMount() {}\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"onFocus={() => setTimeout(() => {\r\n                HideKeyboard.postMessage(\"\")\r\n              }, 100)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n              onFocus={() => setTimeout(() => {\r\n                HideKeyboard.postMessage(\"\")\r\n              }, 100)}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label> &nbsp;</label>\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Mencari\r\n                </>\r\n              ) : (\r\n                \"Cari Pembelian\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n         {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadPembelian = reduxForm({\r\n  form: \"HeadPembelian\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiDataUsers,\r\n})(HeadPembelian);\r\n// export default connect(maptostate, null)(HeadPembelian);\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal : getTglSystem(),\r\n      tgl_akhir : getTglSystem()\r\n    },\r\n  };\r\n})(HeadPembelian);\r\n","/* eslint-disable no-undef */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showModalBatalBeli } from \"../../../actions/pembelian_action.jsx\";\r\nimport {\r\n  formatDate,\r\n  localStoragedecryp,\r\n  localStorageencryp,\r\n} from \"../../../components/helpers/function.jsx\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport { postData } from \"../../../config/axios.jsx\";\r\nimport HeadBatalBeli from \"./HeadBatalBeli.jsx\";\r\nimport HeadPembelian from \"./HeadPembelian.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\n// import Loading from 'react-fullscreen-loading';\r\nimport { PageSettings } from \"../../../config/page-settings.js\";\r\n\r\n// import HeadPembelian from \"./HeadPembelian.jsx\";\r\nclass FormLihatPembelian extends React.Component {\r\n  static contextType = PageSettings;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingServicesSelesai: false,\r\n      isLoadingBatalBeli: false,\r\n      isLoading: false,\r\n      dataservices: [],\r\n      FormModal: false,\r\n      pembayaran: false,\r\n      columns: [\r\n        {\r\n          dataField: \"no_faktur_beli\",\r\n          text: \"No FB\",\r\n          footerAttrs: {\r\n            colSpan: \"3\",\r\n          },\r\n          footer: \"Total\",\r\n        },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n        // {\r\n        //   dataField: \"alamat_customer\",\r\n        //   text: \"Alamat Customer\",\r\n        // },\r\n        {\r\n          dataField: \"no_hp\",\r\n          text: \"No Hp\",\r\n        },\r\n        {\r\n          dataField: \"harga\",\r\n          text: \"Harga\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"harga_nota\",\r\n          text: \"Harga Nota\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"harga_rata\",\r\n          text: \"Harga Rata\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: (columnData) =>\r\n            parseInt(\r\n              columnData.reduce((acc, item) => acc + item, 0)\r\n            ).toLocaleString(\"kr-KO\"),\r\n        },\r\n        {\r\n          dataField: \"kondisi\",\r\n          text: \"Kondisi\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"ambil\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  {/* <button\r\n                    type=\"button\"\r\n                    data-tooltip=\"Batal Pembelian\"\r\n                    onClick={() => this.shoBatalPembelian(row)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-file-export\"></i>\r\n                  </button> */}\r\n                  &nbsp;\r\n                  <button\r\n                    data-tooltip=\"Reprint Pembelian\"\r\n                    type=\"button\"\r\n                    onClick={() => this.ReprintPembelian(row)}\r\n                    className=\"btn btn-success mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-print\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\",\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  ReprintPembelian(id) {\r\n    let hasil = {\r\n      no_faktur_group: id.no_faktur_group,\r\n    };\r\n    postData(\"pembelian/get/bynota\", hasil)\r\n      .then((res) => {\r\n        let feedback = \"\";\r\n        res.data.notabeli.forEach((row, index) => {\r\n          let jml_alamat = row.head.n_alamat_customer.length;\r\n          feedback = `========================================\r\n      Tanggal          : ${row.head.tgl_system}\r\n      Nama Customer    : ${row.head.nama_customer}\r\n      No Hp            : ${row.head.no_hp}\r\n      Alamat Customer  : ${row.head.n_alamat_customer.split(0, 20)}\r\n      `;\r\n          if (jml_alamat > 20) {\r\n            feedback += `                   ${row.head.n_alamat_customer.split(\r\n              0,\r\n              20\r\n            )}\r\n      `;\r\n          }\r\n          if (jml_alamat > 40) {\r\n            feedback += `                   ${row.head.n_alamat_customer.split(\r\n              40,\r\n              20\r\n            )}\r\n      `;\r\n          }\r\n          feedback += `========================================\\n`;\r\n          feedback += `Keterangan\\n`;\r\n          feedback += `========================================\\n`;\r\n          let total = 0;\r\n          let harga_nota = 0;\r\n          row.detail.forEach((detail, index) => {\r\n            total = total + detail.harga;\r\n            harga_nota = harga_nota + detail.harga_nota;\r\n            feedback += `No Faktur Beli : ${detail.no_faktur_beli}\\n`;\r\n            feedback += `Jenis Barang   : ${detail.kode_dept}\\n`;\r\n            feedback += `Nama Barang    : ${detail.nama_barang}\\n`;\r\n            feedback += `Berat          : ${detail.berat.toFixed(3)}\\n`;\r\n            feedback += `Harga          : ${detail.harga.toLocaleString(\r\n              \"kr-KO\"\r\n            )}\\n`;\r\n            feedback += `========================================\\n`;\r\n          });\r\n          feedback += `Total          : ${total.toLocaleString(\"kr-KO\")}\\n`;\r\n          feedback += `========================================\\n`;\r\n          feedback += `Harga Waktu Beli   : ${total.toLocaleString(\"kr-KO\")}\\n`;\r\n          feedback += `Harga Waktu Jual   : ${harga_nota.toLocaleString(\r\n            \"kr-KO\"\r\n          )}\\n`;\r\n          feedback += `\r\n\r\n\r\n\r\n\r\n\r\n\r\n      `;\r\n        });\r\n\r\n        document.getElementById(\"myInput\").value = feedback;\r\n        Print.postMessage(feedback);\r\n        ToastNotification(\"success\", \"Print Ulang Berhasil\");\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n  shoBatalPembelian(row) {\r\n    // console.log(row.no_faktur_beli);\r\n    let data = {\r\n      no_faktur_group: row.no_faktur_group,\r\n    };\r\n    //   console.log(data);\r\n    postData(\"batalpembelian/get/by-faktur\", data)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", res.data.message);\r\n          this.setState({\r\n            FormModal: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            FormModal: true,\r\n          });\r\n          res.data.forEach((row, index) => {\r\n            let hasil = {\r\n              no_faktur_group: row._id.no_faktur_group,\r\n              tgl_system: row._id.tgl_system,\r\n              kode_sales: row._id.kode_sales,\r\n              nama_customer: row._id.nama_customer,\r\n              no_hp: row._id.no_hp,\r\n              alamat_customer: row._id.alamat_customer,\r\n              kode_gudang: row._id.kode_gudang,\r\n              detail_barang: row.detail_barang,\r\n            };\r\n            this.props.dispatch(showModalBatalBeli(hasil));\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        ToastNotification(\"info\", \"Terjadi Kesalahan Saat Request Data\");\r\n        this.setState({\r\n          FormModal: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    postData(\"pembelian/get/by-tanggal\", data_post)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\r\n          this.setState({\r\n            isLoading: false,\r\n            datapembelian: [],\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Data Pembelian Tersedia\");\r\n          this.setState({\r\n            isLoading: false,\r\n            datapembelian: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        //   console.log(err);\r\n        ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\r\n        this.setState({\r\n          isLoading: false,\r\n          datapembelian: [],\r\n        });\r\n      });\r\n  }\r\n  batalPembelian(data) {\r\n    // console.log(data);\r\n    this.setState({\r\n      isLoadingBatalBeli: true,\r\n    });\r\n    setTimeout(() => {\r\n      let hasil = {\r\n        no_faktur_group: data.no_faktur_group,\r\n      };\r\n      postData(\"batalpembelian/simpan\", hasil)\r\n        .then((res) => {\r\n          ToastNotification(\"success\", res.data.message);\r\n          this.setState({\r\n            FormModal: false,\r\n            isLoadingBatalBeli: false,\r\n          });\r\n          let tgl_laporan =\r\n            localStoragedecryp(\"tgl_laporan\").length === 0\r\n              ? []\r\n              : JSON.parse(localStoragedecryp(\"tgl_laporan\"));\r\n          postData(\"pembelian/get/by-tanggal\", tgl_laporan).then((res) => {\r\n            this.setState({\r\n              datapembelian: res.data,\r\n            });\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\r\n          this.setState({\r\n            FormModal: false,\r\n            isLoading: false,\r\n            isLoadingBatalBeli: false,\r\n          });\r\n        });\r\n    }, 500);\r\n  }\r\n  back() {\r\n    this.setState({ FormModal: false });\r\n  }\r\n  componentDidMount() {\r\n    this.context.handleSetPageSidebar(false);\r\n    this.context.handleSetPageHeader(false);\r\n  }\r\n\r\n  render() {\r\n    const version = process.env.REACT_APP_VERSION;\r\n    return (\r\n      <div>\r\n        <Link to={version === \"lite\" ? \"/SubMenuUtility\" : \"/SubMenuPembelian\"}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-tut=\"reactour_4\"\r\n          >\r\n            <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Home\r\n          </button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <Panel>\r\n          <textarea\r\n            style={{ display: \"none\" }}\r\n            id=\"myInput\"\r\n            rows=\"100\"\r\n            cols=\"100\"\r\n          />\r\n\r\n          <PanelHeader>\r\n            {\" \"}\r\n            {this.state.FormModal === true\r\n              ? \"Batal Pembelian\"\r\n              : \"Lihat Pembelian\"}\r\n          </PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            {this.state.FormModal === true ? (\r\n              <HeadBatalBeli\r\n                back={() => this.back()}\r\n                isLoadingBatalBeli={this.state.isLoadingBatalBeli}\r\n                onSubmit={(data) => this.batalPembelian(data)}\r\n              />\r\n            ) : (\r\n              <>\r\n                {/* Lihat Pembelian */}\r\n                <HeadPembelian\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  isLoading={this.state.isLoading}\r\n                />\r\n                <Tabel\r\n                  keyField=\"no_faktur_group\"\r\n                  exportCsv={false}\r\n                  data={this.state.datapembelian}\r\n                  columns={this.state.columns}\r\n                  empty={true}\r\n                  textEmpty=\"Data Barang Kosong\"\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Lihat Pembelian  */}\r\n        </Panel>\r\n        {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(FormLihatPembelian);\r\n","const ValidasiDataUsers = (value) => {\r\n    const errors = {};\r\n    if (!value.user_id) {\r\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.user_name) {\r\n        errors.user_name = \"Username Tidak Boleh Kosong\";\r\n    }\r\n\r\n    if (!value.level) {\r\n        errors.level = \"Level Harus Dipilih \";\r\n    }\r\n    // if (!value.password) {\r\n    //     errors.password = \"Hassword Harus Diisi \";\r\n    // }\r\n    // if (!value.retype_password) {\r\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiDataUsers;\r\n\r\n\r\n","const ValidasiServicesSelesai = (value) => {\r\n    const errors = {};\r\n    if (!value.tgl_selesai) {\r\n        errors.tgl_selesai = \"Tanggal Selesai Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_ambil) {\r\n        errors.tgl_ambil = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiServicesSelesai;\r\n\r\n\r\n"],"sourceRoot":""}