{"version":3,"sources":["pages/Laporan/LaporanPenjualan/LaporanStockJual/pdf/LaporanStockJualPdf.jsx","pages/Laporan/LaporanPenjualan/LaporanStockJual/HeadLaporanStockJual.jsx","pages/Laporan/LaporanPenjualan/LaporanStockJual/index.jsx"],"names":["LaporanStockJualPdf","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","total","forEach","item","index","harga_total","rows","kode_barcode","kode_dept","nama_barang","berat","toFixed","parseInt","harga_gram","toLocaleString","harga_jual","harga_atribut","ongkos","push","footer","colSpan","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","PrintPenjualan","postMessage","HeadLaporanServiceAmbil","props","_this","Object","classCallCheck","this","_super","call","state","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanStockJual","setState","_this2","dispatch","getDataJenis","getDataBaki","setTimeout","change","_this3","databaki","value","name","list","kode_baki","nama_baki","dataJenis","nama_dept","columns","dataField","footerAttrs","coulmdata","react_default","a","createElement","headerClasses","formatter","cell","className","formatGram","row","num","reduce","b","onSubmit","handleSubmit","autoComplete","Field","component","InputDate","label","type","selected","onChange","placeholder","options","ReanderSelect","isLoading","Fragment","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","Component","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","datamaster","initialValues","getTglSystem","context","handleSetPageSidebar","handleSetPageHeader","data_post","tgl_from","formatDate","moment","format","tgl_to","tgl_laporan","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","err","library","to","data-tut","aria-hidden","HeadLaporanStockJual","React","contextType","PageSettings"],"mappings":"yOAqQeA,UA1Pa,WAKvB,IAMCC,EAVJC,EAIGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAJI,GAMDG,GAFHH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAAA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAAA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAES,IAAII,UAAM,IAAK,KAAM,CAAC,IAAK,OAEnCC,EAAY,GAGZC,EAAS,GAEbH,EAAII,YAAY,IAChBJ,EAAIK,KAAK,qBAAsB,GAAI,IACnCL,EAAII,YAAY,IAChBJ,EAAIK,KAAKC,cAAcC,UAAW,IAAK,IACvCP,EAAII,YAAY,GAChB,IAAII,EAAaF,cAAcG,YAAYX,OACvCU,EAAa,IACfR,EAAIK,KAAKC,cAAcG,YAAYC,MAAM,EAAG,IAAK,IAAK,IAEpDF,EAAa,IACfR,EAAIK,KAAKC,cAAcG,YAAYC,MAAM,GAAI,IAAK,IAAK,IAEzDV,EAAII,YAAY,IAChBJ,EAAIW,cAAc,CAChBC,MAAO,uBAGTZ,EAAIK,KAAJ,aAAAQ,OAEiD,IAA7CC,YAAmB,eAAehB,OAC9B,KACAiB,KAAKC,MAAMF,YAAmB,gBAAgBG,SAC9C,QACAF,KAAKC,MAAMF,YAAmB,gBAAgBI,WAEpD,GACA,IAEFvB,EAAc,CACZ,CACE,CACEwB,QAAO,WAET,CACEA,QAAO,cAET,CACEA,QAAO,eAET,CACEA,QAAO,QACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,eACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,aACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,gBACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,SACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,QACPC,OAAQ,CACNC,OAAQ,YAKhB,IAAIC,EAAQ,EACZ1B,EAAK2B,QAAQ,SAACC,EAAMC,GAClBH,GAAgBE,EAAKE,YACrB,IAAIC,EAAO,CACTH,EAAKI,aACLJ,EAAKK,UACLL,EAAKM,YACL,CACEX,QAASK,EAAKO,MAAMC,QAAQ,GAC5BZ,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAASc,SAAST,EAAKU,YAAYC,eAAe,SAClDf,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAASc,SAAST,EAAKY,YAAYD,eAAe,SAClDf,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAASc,SAAST,EAAKa,eAAeF,eAAe,SACrDf,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAASc,SAAST,EAAKc,QAAQH,eAAe,SAC9Cf,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAASc,SAAST,EAAKE,aAAaS,eAAe,SACnDf,OAAQ,CACNC,OAAQ,WAIdnB,EAAUqC,KAAKZ,KAGjB,IAAIa,EAAS,CACX,CACErB,QAAO,oBAAAN,OAAsBjB,EAAKE,QAClC2C,QAAS,EACTrB,OAAQ,CACNC,OAAQ,SACRqB,UAAW,UACXC,UAAW,SAGf,CACExB,QAASc,SAASX,GAAOa,eAAe,SACxCf,OAAQ,CACNC,OAAQ,QACRqB,UAAW,UACXC,UAAW,UAIjBzC,EAAUqC,KAAKC,GAEf,IAAII,EAAU,CACZ,CACEzB,QAAO,cAAAN,OACLE,KAAKC,MAAMF,YAAmB,aAAa+B,QADtC,OAAAhC,OAEDiC,eACNL,QAAS,EACTrB,OAAQ,CAEN2B,UAAW,SACXJ,UAAW,UAKjBzC,EAAUqC,KAAKK,GAEf5C,EAAIgD,UAAU,CACZC,KAAMtD,EACNuD,KAAMhD,EAENiD,OAAQhD,EACRiD,MAAO,QACPC,aAAc,QAEdC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAGVC,SAAU,GAEZC,WAAY,CAGVD,SAAU,GAEZE,WAAY,CACVF,SAAU,EAGVf,UAAW,UACXC,UAAW,QAEbiB,eAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAgB,IAElB1D,EAASH,EAAI8D,mBAAqB,EAClC5D,EAAY,GAeZ,IAAM6D,EAAQ/D,EAAIgE,SAASC,mBACrBC,EAAYlE,EAAIgE,SAASG,SAASC,MAClCC,EAAarE,EAAIgE,SAASG,SAASG,OACzCtE,EAAII,YAAY,IAChB,IAAK,IAAImE,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BrE,EAAI0E,QAAQH,GACZvE,EAAIK,KAAJ,GAAAQ,OAAY0D,EAAZ,QAAA1D,OAAoBkD,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAKX,IAAIC,EAAS5E,EAAI6E,OAAO,iBACxBC,eAAeC,YAAYH,aCvOvBI,oDACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,KAAM,IAAIC,MAEZR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKY,YAAcZ,EAAKY,YAAYF,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IANFA,0DAUjBxF,EAAoB2F,KAAKJ,MAAMc,uDAEpBN,GACXJ,KAAKW,SAAS,CACZ/E,SAAU,IAAIyE,KAAKD,yCAGXA,GACVJ,KAAKW,SAAS,CACZ9E,UAAW,IAAIwE,KAAKD,iDAGJ,IAAAQ,EAAAZ,KAClBA,KAAKJ,MAAMiB,SAASC,gBACpBd,KAAKJ,MAAMiB,SAASE,gBACpBC,WAAW,WACTJ,EAAKhB,MAAMqB,OAAO,YAAa,OAC/BL,EAAKhB,MAAMqB,OAAO,YAAa,QAC9B,sCAGI,IAAAC,EAAAlB,KACHmB,EAAW,CACb,CACEC,MAAO,MACPC,KAAM,UAGVrB,KAAKJ,MAAMuB,SAASjF,QAAQ,SAACoF,GAC3B,IAAI/G,EAAO,CACT6G,MAAOE,EAAKC,UACZF,KAAMC,EAAKC,UAAY,MAAQD,EAAKE,WAEtCL,EAASjE,KAAK3C,KAEhB,IAAIkH,EAAY,CACd,CACEL,MAAO,MACPC,KAAM,UAGVrB,KAAKJ,MAAM6B,UAAUvF,QAAQ,SAACoF,GAC5B,IAAI/G,EAAO,CACT6G,MAAOE,EAAK9E,UACZ6E,KAAMC,EAAK9E,UAAY,MAAQ8E,EAAKI,WAEtCD,EAAUvE,KAAK3C,KAEjB,IAAMoH,EAAU,CACd,CACEC,UAAW,eACX5G,KAAM,eACN6G,YAAa,CACXzE,QAAS,KAEXD,OAAQ,SAAC2E,GACP,OAAOC,EAAAC,EAAAC,cAAA,gCAAwBH,EAAUrH,OAAlC,OAGX,CACEmH,UAAW,YACX5G,KAAM,cAER,CACE4G,UAAW,cACX5G,KAAM,eAER,CACE4G,UAAW,QACX5G,KAAM,QACNkH,cAAe,aAEfC,UAAW,SAACC,GACV,OAAOL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcC,YAAWF,EAAM,MAGzD,CACER,UAAW,aACX5G,KAAM,eACNkH,cAAe,aAEfC,UAAW,SAACC,GACV,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcD,EAAKtF,eAAe,YAIvD,CACE8E,UAAW,aACX5G,KAAM,aACNkH,cAAe,aAEfC,UAAW,SAACC,GACV,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcD,EAAKtF,eAAe,YAIvD,CACE8E,UAAW,gBACX5G,KAAM,gBACNkH,cAAe,aAEfC,UAAW,SAACC,GACV,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcD,EAAKtF,eAAe,YAIvD,CACE8E,UAAW,SACX5G,KAAM,SACNkH,cAAe,aAEfC,UAAW,SAACC,GACV,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcD,EAAKtF,eAAe,YAIvD,CACE8E,UAAW,cACX5G,KAAM,cACNkH,cAAe,aACf/E,OAAQ,SAACiF,EAAMG,EAAKC,EAAKpG,GACvB,OACE2F,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACZD,EAAKK,OAAO,SAACT,EAAGU,GAAJ,OAAUV,EAAIU,GAAG,GAAG5F,eAAe,WAItDqF,UAAW,SAACC,GACV,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcD,EAAKtF,eAAe,aAKzD,OACEiF,EAAAC,EAAAC,cAAA,QAAMU,SAAU3C,KAAKJ,MAAMgD,aAAcC,aAAa,OACpDd,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEzB,KAAK,WACL0B,UAAWC,IACXC,MAAM,eACNC,KAAK,OACLC,SAAUnD,KAAKG,MAAMvE,SACrBwH,SAAU,SAAChD,GAAD,OAAUc,EAAKZ,aAAaF,IACtCiD,YAAY,0BAIhBtB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEzB,KAAK,YACL0B,UAAWC,IACXE,KAAK,OACLC,SAAUnD,KAAKG,MAAMtE,UACrBuH,SAAU,SAAChD,GAAD,OAAUc,EAAKT,YAAYL,IACrC6C,MAAM,gBACNI,YAAY,2BAGhBtB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEG,MAAM,QACN5B,KAAK,YACLiC,QAAS7B,EACT4B,YAAa,4BACbN,UAAWQ,OAGfxB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEG,MAAM,YACN5B,KAAK,YACLiC,QAASnC,EACTkC,YAAa,2BACbN,UAAWQ,OAGfxB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACEiB,KAAK,SACL9B,MAAM,MACNC,KAAK,WACLgB,UAAU,6BAETrC,KAAKJ,MAAM4D,UACVzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyB,SAAA,KACE1B,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BADf,wBAKA,kBAKRN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEC,SAAS,eACTpJ,KAAMyF,KAAKJ,MAAMgE,OAAS5D,KAAKJ,MAAMc,iBAAmB,GACxDiB,QAASA,EACTkC,OAAO,EACPC,UAAU,oCAGd/B,EAAAC,EAAAC,cAAA,OAAKI,UAAWrC,KAAKJ,MAAMgE,OAAS,YAAc,oBAEhD7B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,UACEiB,KAAK,SACLa,QAAS,kBAAM7C,EAAK8C,aACpB3B,UAAU,6BAHZ,0BAlOsB4B,aA4PtCtE,EAA0BuE,YAAU,CAClCC,KAAM,0BACNC,oBAAoB,EACpBC,SAAUC,KAHcJ,CAIvBvE,GAEY4E,kBAAQ,SAACpE,GACtB,MAAO,CACLgB,SAAUhB,EAAMqE,WAAWzD,YAC3BU,UAAWtB,EAAMqE,WAAW1D,aAC5B2D,cAAe,CACb7I,SAAU8I,cACV7I,UAAW6I,iBANFH,CASZ5E,WCzQGe,oDAGJ,SAAAA,EAAYd,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAU,IACjBb,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXqD,WAAW,EACX9C,iBAAkB,GAClBkD,QAAQ,GAEV/D,EAAK+C,aAAe/C,EAAK+C,aAAarC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IAPHA,kEAWjBG,KAAK2E,QAAQC,sBAAqB,GAClC5E,KAAK2E,QAAQE,qBAAoB,wCAGtBtK,GAAM,IAAAqG,EAAAZ,KACb8E,EAAY,CACdC,SAAUC,YACRC,YAAO,IAAI5E,KAAK9F,EAAKqB,WAAWsJ,OAAO,eAEzCC,OAAQH,YAAWC,YAAO,IAAI5E,KAAK9F,EAAKsB,YAAYqJ,OAAO,eAC3D1I,UAAWjC,EAAKiC,UAChB+E,UAAWhH,EAAKgH,WAEd6D,EAAc,CAChBxJ,SAAUoJ,YACRC,YAAO,IAAI5E,KAAK9F,EAAKqB,WAAWsJ,OAAO,eAEzCrJ,UAAWmJ,YACTC,YAAO,IAAI5E,KAAK9F,EAAKsB,YAAYqJ,OAAO,gBAG5ClF,KAAKW,SAAS,CACZ6C,WAAW,IAGb6B,YAAkB,iCAAkCP,GACjDQ,KAAK,SAACC,GAEL,GAAwB,IAApBA,EAAIhL,KAAKE,OAMX,OALA+K,YAAkB,OAAQ,gCAC1B5E,EAAKD,SAAS,CACZiD,QAAQ,EACRJ,WAAW,KAEN,EAETgC,YAAkB,UAAW,+BAC7BC,YAAmB,cAAe/J,KAAKgK,UAAUN,IACjDxE,EAAKD,SAAS,CACZD,iBAAkB6E,EAAIhL,KACtBiJ,WAAW,EACXI,QAAQ,MAGX+B,MAAM,SAACC,GACNJ,YAAkB,OAAQ,mCAC1B5E,EAAKD,SAAS,CACZiD,QAAQ,EACRJ,WAAW,uCAKV,IAAAtC,EAAAlB,KACP,OACE6F,EAAA,EAAA5D,cAAA,WACE4D,EAAA,EAAA5D,cAAC4D,EAAA,EAAD,CAAMC,GAAG,mBACPD,EAAA,EAAA5D,cAAA,UACEiB,KAAK,SACLb,UAAU,oBACV0D,WAAS,cAETF,EAAA,EAAA5D,cAAA,KAAGI,UAAU,wBAAwB2D,cAAY,SALnD,UAQFH,EAAA,EAAA5D,cAAA,WACA4D,EAAA,EAAA5D,cAAA,WACA4D,EAAA,EAAA5D,cAAC4D,EAAA,EAAD,KACEA,EAAA,EAAA5D,cAAC4D,EAAA,EAAD,2BACAA,EAAA,EAAA5D,cAAA,WAEA4D,EAAA,EAAA5D,cAAC4D,EAAA,EAAD,KACEA,EAAA,EAAA5D,cAACgE,EAAD,CACErC,OAAQ5D,KAAKG,MAAMyD,OACnBJ,UAAWxD,KAAKG,MAAMqD,UACtB9C,iBAAkBV,KAAKG,MAAMO,iBAC7BiC,SAAU,SAACpI,GAAD,OAAU2G,EAAK0B,aAAarI,OAG1CsL,EAAA,EAAA5D,cAAA,oBA7FqBiE,IAAMjC,WAA/BvD,EACGyF,YAAcC,IAoGvB1F,EAAmBwD,YAAU,CAC3BC,KAAM,mBACNC,oBAAoB,GAFHF,CAGhBxD,GACY6D,sBAAQ,KAARA,CAAc7D","file":"static/js/98.f34fba79.chunk.js","sourcesContent":["/* eslint-disable no-undef */\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanStockJualPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN STOCK JUAL\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0, 48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48, 90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN STOCK JUAL\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE JENIS`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA / GRAM`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA JUAL`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA ATRIBUT`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: `TOTAL`,\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  let total = 0;\r\n  data.forEach((item, index) => {\r\n    total = total + item.harga_total;\r\n    let rows = [\r\n      item.kode_barcode,\r\n      item.kode_dept,\r\n      item.nama_barang,\r\n      {\r\n        content: item.berat.toFixed(3),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga_gram).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga_jual).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga_atribut).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.ongkos).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga_total).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: \"right\",\r\n        },\r\n      },\r\n    ];\r\n    tableRows.push(rows);\r\n  });\r\n\r\n  let footer = [\r\n    {\r\n      content: `Total Transaksi: ${data.length}`,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: \"center\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        halign: \"right\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(footer);\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${\r\n        JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n      } / ${getToday()}`,\r\n      colSpan: 7,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                          : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN STOCK JUAL.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  PrintPenjualan.postMessage(string);\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN STOCK JUAL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanStockJualPdf;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate, ReanderSelect } from \"../../../../components/helpers/field\";\r\nimport {\r\n  formatGram,\r\n  getTglSystem,\r\n} from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport LaporanStockJualPdf from \"./pdf/LaporanStockJualPdf\";\r\nimport {\r\n  getDataBaki,\r\n  getDataJenis,\r\n} from \"../../../../actions/datamaster_action\";\r\nclass HeadLaporanServiceAmbil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    LaporanStockJualPdf(this.props.LaporanStockJual);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataJenis());\r\n    this.props.dispatch(getDataBaki());\r\n    setTimeout(() => {\r\n      this.props.change(\"kode_dept\", \"ALL\");\r\n      this.props.change(\"kode_baki\", \"ALL\");\r\n    }, 100);\r\n  }\r\n\r\n  render() {\r\n    let databaki = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.databaki.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_baki,\r\n        name: list.kode_baki + \" - \" + list.nama_baki,\r\n      };\r\n      databaki.push(data);\r\n    });\r\n    let dataJenis = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.dataJenis.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_dept,\r\n        name: list.kode_dept + \" - \" + list.nama_dept,\r\n      };\r\n      dataJenis.push(data);\r\n    });\r\n    const columns = [\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n        footerAttrs: {\r\n          colSpan: \"8\",\r\n        },\r\n        footer: (coulmdata) => {\r\n          return <div>Total Transaksi : {coulmdata.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_dept\",\r\n        text: \"Kode Jenis\",\r\n      },\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{formatGram(cell, 3)}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_gram\",\r\n        text: \"Harga / Gram\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_jual\",\r\n        text: \"Harga Jual\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_atribut\",\r\n        text: \"Harga Atribut\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"ongkos\",\r\n        text: \"Ongkos\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_total\",\r\n        text: \"Harga Total\",\r\n        headerClasses: \"text-right\",\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">\r\n              {cell.reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}\r\n            </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              label=\"Jenis\"\r\n              name=\"kode_dept\"\r\n              options={dataJenis}\r\n              placeholder={\"Silahkan Pilih Kode Jenis\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              label=\"Kode Baki\"\r\n              name=\"kode_baki\"\r\n              options={databaki}\r\n              placeholder={\"Silahkan Pilih Kode Baki\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? this.props.LaporanStockJual : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Stock Jual Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  Export PDF\r\n                </button>\r\n              </div>\r\n              {/* <div className=\"col-lg-6\">\r\n                <LaporanStockJualExel data={this.props.LaporanStockJual} />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanServiceAmbil = reduxForm({\r\n  form: \"HeadLaporanServiceAmbil\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLaporanServiceAmbil);\r\n// export default connect()(HeadLaporanServiceAmbil);\r\nexport default connect((state) => {\r\n  return {\r\n    databaki: state.datamaster.getDataBaki,\r\n    dataJenis: state.datamaster.getDataJenis,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanServiceAmbil);\r\n","import {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  formatDate,\r\n  moment,\r\n  ToastNotification,\r\n  localStorageencryp,\r\n  PanelBody,\r\n  postDataNoTImeOut,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadLaporanStockJual from \"./HeadLaporanStockJual\";\r\nimport { PageSettings } from \"../../../../config/page-settings\";\r\n\r\nclass LaporanStockJual extends React.Component {\r\n  static contextType = PageSettings;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      LaporanStockJual: [],\r\n      export: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.context.handleSetPageSidebar(false);\r\n    this.context.handleSetPageHeader(false);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_from: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_to: formatDate(moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")),\r\n      kode_dept: data.kode_dept,\r\n      kode_baki: data.kode_baki,\r\n    };\r\n    let tgl_laporan = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    postDataNoTImeOut(\"penjualan/report-stock-terjual\", data_post)\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Laporan Stock Terjual Kosong\");\r\n          this.setState({\r\n            export: false,\r\n            isLoading: false,\r\n          });\r\n          return false;\r\n        }\r\n        ToastNotification(\"success\", \"Laporan Stock Jual Tersedia\");\r\n        localStorageencryp(\"tgl_laporan\", JSON.stringify(tgl_laporan));\r\n        this.setState({\r\n          LaporanStockJual: res.data,\r\n          isLoading: false,\r\n          export: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n        this.setState({\r\n          export: false,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/SubMenuUtility\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-tut=\"reactour_4\"\r\n          >\r\n            <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Home\r\n          </button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <Panel>\r\n          <PanelHeader>Laporan Stock Jual</PanelHeader>\r\n          <br />\r\n          {/* Blank Page */}\r\n          <PanelBody>\r\n            <HeadLaporanStockJual\r\n              export={this.state.export}\r\n              isLoading={this.state.isLoading}\r\n              LaporanStockJual={this.state.LaporanStockJual}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </PanelBody>\r\n          <br />\r\n          {/* End Tambah Blank Page  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLaporanStockJual = reduxForm({\r\n  form: \"LaporanStockJual\",\r\n  enableReinitialize: true,\r\n})(LaporanStockJual);\r\nexport default connect(null)(LaporanStockJual);\r\n"],"sourceRoot":""}